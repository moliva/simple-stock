{"version":3,"sources":["components/Item.tsx","components/BoxContents.tsx","components/Filter.tsx","components/Boxes.tsx","components/Spin.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ItemComponent","props","item","useState","showMenu","setShowMenu","editing","setEditing","name","value","setValue","confirm","onEdit","className","onMouseEnter","onMouseLeave","autoFocus","onKeyDown","ev","keyCode","onChange","e","target","icon","faBan","onClick","faCheck","faTrashAlt","onRemove","faEdit","BoxContents","box","onRemoveItem","onEditItem","onAddItem","number","faPlus","items","map","i","key","newItem","Filter","focus","setFocus","onValueChanged","onFocus","onBlur","placeholder","faEraser","Boxes","boxes","onBoxSelected","selected","setSelected","current","Spin","faSpinner","backendUrl","App","toShow","undefined","setBoxes","filter","setFilter","isBlank","str","test","filterContent","Fuse","shouldSort","findAllMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","search","removeItem","fetch","find","b","indexOf","method","then","response","ok","Error","statusText","it","useEffect","json","array","sort","b1","b2","length","edited","old","headers","body","JSON","stringify","editItem","addItem","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ddd77add.chunk.js","sourcesContent":["import { Item } from \"../types\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBan,\n  faCheck,\n  faTrashAlt,\n  faEdit\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function ItemComponent(props: {\n  item: Item;\n  onRemove: () => void;\n  onEdit: (newItem: Item) => void;\n}) {\n  const { item } = props;\n  const [showMenu, setShowMenu] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [value, setValue] = useState(item.name);\n\n  function confirm() {\n    props.onEdit({ ...item, name: value });\n    setEditing(false);\n  }\n\n  return (\n    <li\n      className=\"box-contents-item\"\n      onMouseEnter={() => setShowMenu(true)}\n      onMouseLeave={() => setShowMenu(false)}\n    >\n      {editing ? (\n        <input\n          className=\"edit-input\"\n          value={value}\n          autoFocus={true}\n          onKeyDown={ev => {\n            if (ev.keyCode === 13) {\n              confirm();\n            }\n          }}\n          onChange={e => setValue(e.target.value)}\n        ></input>\n      ) : (\n        item.name\n      )}\n      {showMenu ? (\n        editing ? (\n          <div className=\"box-contents-item-controls\">\n            <FontAwesomeIcon\n              icon={faBan}\n              onClick={() => {\n                setEditing(false);\n              }}\n              className=\"box-contents-item-control remove\"\n            ></FontAwesomeIcon>\n            <FontAwesomeIcon\n              icon={faCheck}\n              onClick={() => confirm()}\n              className=\"box-contents-item-control confirm\"\n            ></FontAwesomeIcon>\n          </div>\n        ) : (\n          <div className=\"box-contents-item-controls\">\n            <FontAwesomeIcon\n              icon={faTrashAlt}\n              onClick={props.onRemove}\n              className=\"box-contents-item-control remove\"\n            ></FontAwesomeIcon>\n            <FontAwesomeIcon\n              icon={faEdit}\n              onClick={() => {\n                setValue(item.name);\n                setEditing(true);\n              }}\n              className=\"box-contents-item-control edit\"\n            ></FontAwesomeIcon>\n          </div>\n        )\n      ) : (\n        \"\"\n      )}\n    </li>\n  );\n}\n","import { Item, Box } from \"../types\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { ItemComponent } from \"./Item\";\n\nexport function BoxContents(props: {\n  box: Box;\n  onRemoveItem: (box: Box, item: Item) => void;\n  onEditItem: (box: Box, item: Item, edited: Item) => void;\n  onAddItem: (item: Item) => void;\n}) {\n  const { box, onRemoveItem, onEditItem, onAddItem } = props;\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <div className={`box-contents box-${box.number}`}>\n      <h3\n        className=\"box-contents-name\"\n        onMouseEnter={() => setShowMenu(true)}\n        onMouseLeave={() => setShowMenu(false)}\n      >\n        Box {box.number}\n        {showMenu ? (\n          <div className=\"box-contents-item-controls\">\n            <FontAwesomeIcon\n              icon={faPlus}\n              onClick={() => onAddItem({ name: \"Nuevo\" })}\n              className=\"box-contents-item-control add\"\n            ></FontAwesomeIcon>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </h3>\n      <ul className=\"box-contents-list\">\n        {box.items.map((item, i) => (\n          <ItemComponent\n            item={item}\n            key={`box-contents-item-${box.number}-${i}`}\n            onRemove={() => onRemoveItem(box, item)}\n            onEdit={newItem => onEditItem(box, item, newItem)}\n          ></ItemComponent>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEraser } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Filter = (props: { onChange: (value: string) => void }) => {\n  const [value, setValue] = useState(\"\");\n  const [focus, setFocus] = useState(false);\n\n  function onValueChanged(value: string) {\n    setValue(value);\n    props.onChange(value);\n  }\n\n  return (\n    <div className=\"filter\">\n      <input\n        className=\"filter-input\"\n        value={value}\n        onChange={e => onValueChanged(e.target.value)}\n        onFocus={() => setFocus(true)}\n        onBlur={() => setFocus(false)}\n        placeholder=\"Filter...\"\n      ></input>\n      <button\n        className={\n          \"filter-clear-button\" + (focus ? \" filter-clear-button-focus\" : \"\")\n        }\n        onClick={() => onValueChanged(\"\")}\n      >\n        <FontAwesomeIcon icon={faEraser} />\n      </button>\n    </div>\n  );\n};\n","import { Box } from \"../types\";\nimport React, { useState } from \"react\";\n\nexport function Boxes(props: {\n  boxes: Box[];\n  onBoxSelected: (box: number | null) => void;\n}) {\n  const { boxes, onBoxSelected } = props;\n  const [selected, setSelected] = useState<number | null>(null);\n\n  return (\n    <div className=\"boxes\">\n      {boxes.map(box => (\n        <button\n          key={`box-${box.number}`}\n          className={`box box-${box.number} ${\n            selected === box.number ? \"selected\" : \"\"\n          }`}\n          onClick={() => {\n            const current = selected === box.number ? null : box.number;\n            setSelected(current);\n            onBoxSelected(current);\n          }}\n        >\n          {box.number}\n        </button>\n      ))}\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nexport const Spin = () => (\n  <FontAwesomeIcon icon={faSpinner} className=\"spin\"></FontAwesomeIcon>\n);\n","import React, { useState, useEffect } from \"react\";\nimport Fuse from \"fuse-js-latest\";\nimport { Box, Item } from \"./types\";\nimport { BoxContents } from \"./components/BoxContents\";\nimport { Filter } from \"./components/Filter\";\nimport { Boxes } from \"./components/Boxes\";\nimport { Spin } from \"./components/Spin\";\n\nimport \"./styles/App.css\";\n\nconst backendUrl = \"https://simple-stock-service.herokuapp.com\";\n\nconst App: React.FC = () => {\n  const [boxes, setBoxes] = useState<undefined | Box[]>(undefined);\n  const [filter, setFilter] = useState(\"\");\n  const [selected, setSelected] = useState<number | null>(null);\n\n  useEffect(() => {\n    fetch(backendUrl + \"/boxes\")\n      .then(response => response.json())\n      .then(array => array.sort((b1: any, b2: any) => b1.number - b2.number))\n      .then(boxes => setBoxes(boxes));\n  }, []);\n\n  function isBlank(str: string) {\n    return !str || /^\\s*$/.test(str);\n  }\n\n  function filterContent<T>(boxes: T[], filter: string) {\n    const options = {\n      shouldSort: true,\n      findAllMatches: true,\n      threshold: 0.4,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: [\"name\", \"items.name\"]\n    };\n    const fuse = new Fuse(boxes, options);\n    return fuse.search<T>(filter);\n  }\n\n  function removeItem(box: Box, item: Item) {\n    fetch(\n      `${backendUrl}/boxes/${box.number}/items/${boxes!\n        .find(b => b.number === box.number)!\n        .items.indexOf(item)}`,\n      { method: \"DELETE\" }\n    ).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      setBoxes(\n        boxes?.map(current =>\n          current.number === box.number\n            ? { ...current, items: current.items.filter(it => it !== item) }\n            : current\n        )\n      );\n    });\n  }\n\n  function editItem(box: Box, old: Item, edited: Item) {\n    fetch(\n      `${backendUrl}/boxes/${box.number}/items/${boxes!\n        .find(b => b.number === box.number)!\n        .items.indexOf(old)}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(edited)\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      setBoxes(\n        boxes?.map(current =>\n          current.number === box.number\n            ? {\n                ...current,\n                items: current.items.map(it => (it === old ? edited : it))\n              }\n            : current\n        )\n      );\n    });\n  }\n\n  function addItem(box: Box, item: Item) {\n    fetch(`${backendUrl}/boxes/${box.number}/items`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      setBoxes(\n        boxes?.map(current =>\n          current === box ? { ...box, items: [...box.items, item] } : current\n        )\n      );\n    });\n  }\n\n  let toShow: Box[] | undefined;\n\n  if (boxes) {\n    // filter on;ly by the box selected if any\n    toShow = selected ? boxes.filter(box => box.number === selected) : boxes;\n\n    // filter items in boxes if filter is active\n    toShow = isBlank(filter)\n      ? toShow\n      : toShow.map(box => ({\n          ...box,\n          items: filterContent(box.items, filter)\n        }));\n\n    // filter only boxes with content if filter active\n    toShow = isBlank(filter) ? toShow : filterContent(toShow, filter);\n  }\n\n  return (\n    <section className=\"container\">\n      <header className=\"header\">\n        <div className=\"nav-bar\">\n          <Filter onChange={value => setFilter(value)}></Filter>\n          {boxes === undefined ? (\n            <Spin />\n          ) : (\n            <Boxes\n              boxes={boxes}\n              onBoxSelected={selected => setSelected(selected)}\n            ></Boxes>\n          )}\n        </div>\n      </header>\n      <main className=\"main\">\n        {toShow === undefined ? (\n          <Spin />\n        ) : toShow.length === 0 ? (\n          <div className=\"boxes-empty\">No hay nada que coincida :'(</div>\n        ) : (\n          toShow.map((box: Box) => (\n            <BoxContents\n              box={box}\n              key={`box-contents-${box.number}`}\n              onRemoveItem={removeItem}\n              onEditItem={(box, item, edited) => editItem(box, item, edited)}\n              onAddItem={item => addItem(box, item)}\n            ></BoxContents>\n          ))\n        )}\n      </main>\n    </section>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}